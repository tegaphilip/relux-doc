swagger: '2.0'
info:
  version: 0.1.0
  title: Basket Mix API
produces:
  - application/json
consumes:
  - application/json
parameters:
  categoryId:
    - name: categoryId
      in: path
      description: The ID of a category
      required: true
      type: integer
  productAttributeId:
    - name: attributeId
      in: path
      description: The ID of the attribute to retrieve
      required: true
      type: integer
  warehouseId:
    - name: warehouseId
      in: path
      description: The ID of a warehouse
      required: true
      type: integer
  productId:
    - name: productId
      in: path
      description: the product Id
      required: true
      type: integer
  categoryAttributeId:
    - name: categoryAttributeId
      in: path
      description: category attribute id
      required: true
      type: integer
  binId:
    - name: binId
      in: path
      description: bin id
      required: true
      type: integer
      
host: local.oms-service.com
paths:
  /:
    get:
      description: API Versionca
      parameters:
        - name: access_token
          in: query
          description: OAuth Access Token
          required: true
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Access Token Required

  '/oauth/token':
    post:
      description: Get Access Token
      parameters:
        - name: grant_type
          in: formData
          description: Grant Type Token
          required: true
          type: string
        - name: code
          in: formData
          description: Authorization Code
          required: true
          type: string
        - name: client_id
          in: formData
          description: Client Id
          required: true
          type: string
        - name: client_secret
          in: formData
          description: Client Secret
          required: true
          type: string
      responses:
        '200':
          description: Successful

  '/oauth/refreshtoken':
      post:
        description: Get Refresh Token
        parameters:
          - name: grant_type
            in: formData
            description: Grant Type
            required: true
            type: string
          - name: client_id
            in: formData
            description: Client Id
            required: true
            type: string
          - name: client_secret
            in: formData
            description: Client Secret
            required: true
            type: string
          - name: refresh_token
            in: formData
            description: Refresh Token
            required: true
            type: string
        responses:
          '200':
            description: Successful

  '/oauth/authorize':
      post:
        description: Get Refresh Token
        parameters:
          - name: grant_type
            in: formData
            description: Grant Type
            required: true
            type: string
          - name: client_id
            in: formData
            description: Client Id
            required: true
            type: string
          - name: client_secret
            in: formData
            description: Client Secret
            required: true
            type: string
          - name: response_type
            in: formData
            description: Refresh Token
            required: true
            type: string
          - name: state
            in: formData
            description: State
            required: true
            type: string
        responses:
          '200':
            description: Successful

  '/categories/':
    post:
      description: Create Category
      parameters:
        - name: name
          in: formData
          description: Name of the category
          required: true
          type: string
        - name: description
          in: formData
          description: A textual description of the category
          required: true
          type: string
        - name: parent_id
          in: formData
          description: The immediate parent id of the category to be created (if not supplied, category is in the root)
          required: false
          type: integer
        - name: user_id
          in: formData
          description: The user id of the person who creates the category (defaults to the root admin if not supplied)
          required: false
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '400':
          description: Invalid parameters
        '500':
          description: Internal Errors

  '/categories/':
    get:
      description: Search for categories
      parameters:
        - name: name
          in: query
          description: Name of the category
          required: false
          type: string
        - name: paginate
          in: query
          description:  (0 or 1) whether or not to paginate
          required: false
          type: integer
        - name: tree
          in: query
          description: (0 or 1) Whether to return a tree structure (with parent categories) or just a list of all categories
          required: false
          type: integer
        - name: status
          in: query
          description: Actual Status ID (from status model) of the category
          required: false
          type: integer
        - name: page
          in: query
          description: Required for pagination
          required: false
          type: integer
        - name: limit
          in: query
          description: Required for pagination
          required: false
          type: integer
        - name: sortcol
          in: query
          description: order by clause
          required: false
          type: string
        - name: sortdir
          in: query
          description: order by direction
          required: false
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/categories/{categoryId}':
    get:
      description: Information for a specific category
      parameters:
        - $ref: "#/parameters/categoryId"
        - name: tree
          in: query
          description: (0 or 1) Whether or not to attach sub categories of this particular retrieved category
          required: false
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/categories/{categoryId}':
    put:
      description: Update Category
      parameters:
        - $ref: "#/parameters/categoryId"
        - name: name
          in: formData
          description: Name of the category
          required: false
          type: string
        - name: description
          in: formData
          description: A textual description of the category
          required: false
          type: string
        - name: parent_id
          in: formData
          description: The immediate parent id of the category to be created (if not supplied, category is in the root)
          required: false
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '400':
          description: Invalid parameters
        '404':
          description: Not found
        '500':
          description: Internal Errors

  '/categories/user/{userId}':
    post:
      description: Set up Category path(s) for a user
      parameters:
        - name: userId
          in: path
          description: Owner of the category path(s)
          required: true
          type: integer
        - name: category_ids
          in: formData
          description: An array of category ids selected by user
          required: true
          type: array
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '400':
          description: Invalid parameters
        '500':
          description: Internal Errors

  '/categories/order/':
    put:
      description: Re-order category IDs
      parameters:
        - name: user_id
          in: formData
          description: User ID of admin
          required: true
          type: integer
        - name: ordering
          in: formData
          description: An key to value array of category ids and their ordering_number
          required: true
          type: array
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '400':
          description: Invalid parameters
        '500':
          description: Internal Errors

  '/statuses/':
    get:
      description: Retrieve statuses
      parameters:
        - name: module
          in: query
          description: module to be retrieved
          required: false
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/attributes/':
    post:
      description: Create an attribute
      parameters:
        - name: code
          in: formData
          description: code name of the attribute (must not contain white spaces)
          required: true
          type: string
        - name: label
          in: formData
          description: A textual description of the attribute name
          required: true
          type: string
        - name: type
          in: formData
          description: The type of attribute (decimal, int, string, etc)
          required: true
          type: string
        - name: created_by
          in: formData
          description: The user id of the person who creates the attribute
          required: true
          type: integer
        - name: is_filterable
          in: formData
          description: 0 or 1 (whether or not the attribute will be used as a filter on front end)
          required: true
          type: integer
        - name: applies_to_all
          in: formData
          description: 0 or 1 (whether or not the attribute will be global)
          required: true
          type: integer
        - name: is_drop_down
          in: formData
          description: 0 or 1 (whether or not the attribute values will be restricted to a select field)
          required: true
          type: integer
        - name: values
          in: formData
          description: array of values to be used as drop down content
          required: false
          type: array
        - name: status
          in: formData
          description: status of the attribute
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '400':
          description: Invalid parameters
        '500':
          description: Internal Errors

  '/attributes/':
    get:
      description: Search for attributes
      parameters:
        - name: code
          in: query
          description: code of the attribute
          required: false
          type: string
        - name: label
          in: formData
          description: A textual description of the attribute name
          required: false
          type: string
        - name: type
          in: formData
          description: The type of attribute (decimal, int, string, etc)
          required: false
          type: string
        - name: is_filterable
          in: formData
          description: 0 or 1 (whether or not the attribute will be used as a filter on front end)
          required: false
          type: integer
        - name: applies_to_all
          in: formData
          description: 0 or 1 (whether or not the attribute will be global)
          required: false
          type: integer
        - name: is_drop_down
          in: formData
          description: 0 or 1 (whether or not the attribute values will be restricted to a select field)
          required: false
          type: integer
        - name: paginate
          in: query
          description:  (0 or 1) whether or not to paginate
          required: false
          type: integer
        - name: status
          in: query
          description: Actual Status ID (from status model) of the attribute
          required: false
          type: integer
        - name: page
          in: query
          description: Required for pagination
          required: false
          type: integer
        - name: limit
          in: query
          description: Required for pagination
          required: false
          type: integer
        - name: sortcol
          in: query
          description: order by clause
          required: false
          type: string
        - name: sortdir
          in: query
          description: order by direction
          required: false
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/attributes/{attributeId}':
    get:
      description: Information for a specific attribute
      parameters:
        - $ref: "#/parameters/productAttributeId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/attributes/{attributeId}':
      put:
        description: Update Attribute
        parameters:
         - $ref: "#/parameters/productAttributeId"
         - name: code
           in: formData
           description: code name of the attribute (must not contain white spaces)
           required: false
           type: string
         - name: label
           in: formData
           description: A textual description of the attribute name
           required: false
           type: string
         - name: type
           in: formData
           description: The type of attribute (decimal, int, string, etc)
           required: false
           type: string
         - name: user_id
           in: formData
           description: The user id of the person who wants to update the attribute
           required: true
           type: integer
         - name: is_filterable
           in: formData
           description: 0 or 1 (whether or not the attribute will be used as a filter on front end)
           required: false
           type: integer
         - name: applies_to_all
           in: formData
           description: 0 or 1 (whether or not the attribute will be global)
           required: false
           type: integer
         - name: is_drop_down
           in: formData
           description: 0 or 1 (whether or not the attribute values will be restricted to a select field)
           required: false
           type: integer
         - name: values
           in: formData
           description: array of values to be used as drop down content
           required: false
           type: array
         - name: status
           in: formData
           description: status of the attribute
           required: false
           type: integer
      responses:
         '200':
           description: Successful response
         '400':
           description: Access token required
         '400':
           description: Invalid parameters
         '404':
           description: Not found
         '500':
           description: Internal Errors

  '/warehouses/':
      post:
        description: Create Warehouse
        parameters:
         - name: name
           in: formData
           description: The name of the warehouse to create
           required: true
           type: string
         - name: merchant_id
           in: formData
           description: The merchant ID of the owner
           required: true
           type: integer
         - name: address
           in: formData
           description: The address of the warehouse
           required: true
           type: string
      responses:
         '200':
           description: Successful response
         '400':
           description: Access token required
         '400':
           description: Invalid parameters
         '500':
           description: Internal Errors

  '/warehouses/{warehouseId}/':
      put:
        description: Update Warehouse
        parameters:
         - $ref: "#/parameters/warehouseId"
         - name: name
           in: formData
           description: The name of the warehouse
           required: false
           type: string
         - name: address
           in: formData
           description: New address
           required: false
           type: string
      responses:
         '200':
           description: Successful response
         '400':
           description: Access token required
         '400':
           description: Invalid parameters
         '404':
           description: Not found
         '500':
           description: Internal Errors

  '/warehouses/{warehouseId}/':
    get:
      description: Get Warehouse
      parameters:
       - $ref: "#/parameters/warehouseId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found
  '/warehouses/':
      get:
        description: Search for warehouses Warehouse
        parameters:
         - name: name
           in: query
           description: The name of the warehouse to retrieve
           required: false
           type: string
         - name: paginate
           in: query
           description:  (0 or 1) whether or not to paginate
           required: false
           type: integer
         - name: page
           in: query
           description: Required for pagination
           required: false
           type: integer
         - name: limit
           in: query
           description: Required for pagination
           required: false
           type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found

  '/warehouses/{warehouseId}/bins':
    get:
      description: Get all bins in a particular warehouse (Accepts all properties of bin location as filters)
      parameters:
        - $ref: "#/parameters/warehouseId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/warehouses/{warehouseId}/bins':
    post:
      description: Create a bin in the specified warehouse
      parameters:
        - $ref: "#/parameters/warehouseId"
        - name: name
          in: formData
          description: name of bin
          required: true
          type: string
        - name: size_of_bin
          in: formData
          description: Size of the bin
          required: false
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
  '/warehouses/{warehouseId}/bins/{binId}':
    get:
      description: Get bin details
      parameters:
        - $ref: "#/parameters/warehouseId"
        - $ref: "#/parameters/binId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found

  '/warehouses/{warehouseId}/bins/{binId}':
    put:
      description: Update bin location (Accepts all properties of bin location as formData)
      parameters:
        - $ref: "#/parameters/warehouseId"
        - $ref: "#/parameters/binId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found

  '/categories/{categoryId}/attributes':
    get:
      description: Get all attributes mapped to this category (Accepts properties of category attributes model as filters)
      parameters:
        - $ref: "#/parameters/categoryId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/categories/{categoryId}/attributes':
    post:
      description: Map an attribute to a category
      parameters:
        - $ref: "#/parameters/categoryId"
        - name: product_attribute_id
          in: formData
          description: a valid attribute id from Product Attributes Class $ref attributeId
          required: true
          type: integer
        - name: created_by
          in: formData
          description: a valid user id
          required: true
          type: integer
        - name: required
          in: formData
          description: whether or not this attribute is compulsory for this category (0 or 1)
          required: true
          type: integer
        - name: active
          in: formData
          description: whether or not this attribute is active or disabled for this category (0 or 1) - defaults to 1
          required: false
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required

  '/categories/{categoryId}/attributes/{categoryAttributeId}':
    get:
      description: Get category attribute details
      parameters:
        - $ref: "#/parameters/categoryId"
        - $ref: "#/parameters/categoryAttributeId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found

  '/categories/{categoryId}/attributes/{categoryAttributeId}':
    put:
      description: Update category location (Accepts all properties of category attribute model as formData)
      parameters:
        - $ref: "#/parameters/categoryId"
        - $ref: "#/parameters/categoryAttributeId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found

  '/products/{productId}/items':
    post:
      description: Add a new item (a single quantity) to a product
      parameters:
        - $ref: "#/parameters/productId"
        - name: allocation_status
          in: formData
          description: the allocation status of the item (store , project , etc)
          required: false
          type: integer
        - name: manufacture_date
          in: formData
          description: Manufacture date (format yyyy-mm-dd)
          required: false
          type: string
        - name: expiry_date
          in: formData
          description: Expiry date (format yyyy-mm-dd)
          required: false
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '500':
          description: Internal error

  '/products/{productId}/items':
    get:
      description: Get all items for this product (Accepts pagination params)
      parameters:
        - $ref: "#/parameters/productId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found

  '/products/{productId}/items/{productItemId}':
    put:
      description: Update a single item
      parameters:
        - $ref: "#/parameters/productId"
        - $ref: allocation_status
        - $ref: manufacture_date
        - $ref: expiry_date
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found
        '500':
          description: Internal error

  '/products/{productId}/items/{productItemId}':
    get:
      description: Get a single item details
      parameters:
        - $ref: "#/parameters/productId"
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '404':
          description: Not found

  '/products/{productId}/items/additems':
    post:
      description: Bulk Product Creation (Auto)
      parameters:
        - $ref: "#/parameters/productId"
        - name: number_of_items
          in: formData
          description: number of items to generate
          required: true
          type: integer
        - $ref: allocation_status
        - $ref: manufacture_date
        - $ref: expiry_date
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '500':
          description: Internal error

  '/products/{productId}/items/additems':
    post:
      description: Bulk Product Creation (Manual - Takes an array data same format as  post - /products/{productId}/items/ )
      parameters:
        - $ref: "#/parameters/productId"

  '/products/{productId}/items/updateitems':
    put:
      description: Bulk Product Update (Takes an array data same format as  post - /products/{productId}/items/ )
      parameters:
        - $ref: "#/parameters/productId"

  '/products':
    post:
      description: Create a product
      parameters:
        - name: name
          in: formData
          description: Name of product
          required: true
          type: string
        - name: qty
          in: formData
          description: Quantity to be created
          required: true
          type: integer
        - name: merchant_id
          in: formData
          description: Owner of product
          required: true
          type: integer
        - name: description
          in: formData
          description: Description of product
          required: true
          type: string
        - name: type
          in: formData
          description: Type of product (simple or configurable)
          required: true
          type: string
        - name: price
          in: formData
          description: Price of product
          required: true
          type: string
        - name: weight
          in: formData
          description: Weight of product
          required: true
          type: float
        - name: images
          in: formData
          description: Array of images (with keys is_main and image_url)
          required: false
          type: array
        - name: categories
          in: formData
          description: Category path of product (separated by forward slash `/`)
          required: true
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Access token required
        '500':
          description: Internal error